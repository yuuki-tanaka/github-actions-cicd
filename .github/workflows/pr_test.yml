# This is a basic workflow to help you get started with Actions

name: CodeClimate_PR_Comment

on:
  pull_request:

jobs:
  PR_Comment:
    runs-on: ubuntu-latest

    steps:
    
      - name: get csv data
        run: |
          echo '51,10,262,0,57,"(anonymous)@18-74@./dev/firebase/functions/src/index.ts","./dev/firebase/functions/src/index.ts","(anonymous)","(anonymous)",18,74' > sample.csv
          echo "CSVDATA=`cat sample.csv`" >> $GITHUB_ENV
          
      
      - uses: actions/github-script@v6    
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            
            let readCSV = csv_data => {
              const separator = ','
              const columnSize = 11
              
              let chars = Array.from(csv_data)
              let list = []
              let queteOpenFlg = false
              let buf = ""
              let csvList = []
              for (var i = 0; i < chars.length; i++) {
                if (chars[i] == '"') {
                  queteOpenFlg = queteOpenFlg == false
                  continue
                }
                if ((chars[i] == separator || chars[i] == '\n') && !queteOpenFlg) {
                  list.push(buf)
                  buf = ""
                  if (list.length == columnSize) {
                    console.log(list)
                    csvList.push(list)
                    list = [];
                  }
                } else {
                  buf += chars[i];
                }
              }
              return csvList
            }
            
            let makeData = csv_data => {
              console.log(csv_data)
              let datas = [];
              const data_string = readCSV(csv_data)
              for (let i = 0; i < data_string.length; i++) {
                let dataArray = data_string[i].split(',')
                let fileData = {};
                fileData.complexity = dataArray[1];
                fileData.file = dataArray[6].replace(/"/g, '').replace('./', '');
                fileData.funcName = dataArray[7].replace(/"/g, ''); 
                fileData.start = dataArray[9];
                fileData.end = dataArray[10];
                datas.push(fileData)
              }
              return datas;
            }

            const {CSVDATA} = process.env
            let csvDataArray = makeData(`${CSVDATA}`)
            console.log(csvDataArray)
            
            /* 
            let pull_info = await github.request('GET /repos/{owner}/{repo}/pulls/{pull_number}/files', {
              owner: owner,
              repo: repo,
              pull_number: pull_number
            })
            
            let file = pull_info.data[0].filename
            */
            
            const state_urls = context.payload.pull_request.statuses_url.split('/')
            const commit_id = state_urls[state_urls.length -1]
            const owner = context.payload.repository.full_name.split('/')[0]
            const repo = context.payload.repository.full_name.split('/')[1]
            const pull_number = context.payload.pull_request.number
            
            try {
              for (const fileData of csvDataArray) {
                
                if (fileData.complexity < 10) continue;
                
                await github.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/comments', {
                    owner: owner,
                    repo: repo,
                    pull_number: pull_number,
                    body: 'Method ' + fileData.funcName + ' has a Cognitive Complexity of' + fileData.complexity,
                    commit_id: commit_id,
                    path: fileData.file,
                    start_line: fileData.start,
                    start_side: 'RIGHT',
                    line: fileData.end,
                    side: 'RIGHT'
                })
              } 
            } catch (error) {console.log(error)}
            
          

