# This is a basic workflow to help you get started with Actions

name: CodeClimate_PR_Comment

on:
  pull_request:

jobs:
  PR_Comment:
    runs-on: ubuntu-18.04
    steps:
      - name: get csv data
        run: |
          echo '51,11,262,0,57,"(anonymous)@18-74@./dev/firebase/functions/src/index.ts","main.go","(anonymous)","(anonymous)",6,10' > sample.csv
      
      - run: npm install csv-parse
      - uses: actions/github-script@v6    
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs')
            const {parse} = require('csv-parse/sync')
            const state_urls = context.payload.pull_request.statuses_url.split('/')
            const commit_id = state_urls[state_urls.length -1]
            const owner = context.payload.repository.full_name.split('/')[0]
            const repo = context.payload.repository.full_name.split('/')[1]
            const pull_number = context.payload.pull_request.number
            const pull_info = await github.request('GET /repos/{owner}/{repo}/pulls/{pull_number}/files', {
              owner: owner,
              repo: repo,
              pull_number: pull_number
            })

            let makeData = records => {
              let datas = []
              for (const record of records) {
                console.log(record)
                let fileData = {}
                fileData.complexity = record[1]
                fileData.file = record[6]
                fileData.funcName = record[7]
                fileData.start = Number(record[9])
                fileData.end = Number(record[10])
                datas.push(fileData)
              }  
              return datas;
            }

            let isEditFile = fileName => {
              for (const fileData of pull_info.data) {
                if (fileData.filename === fileName) return true
              }
              return false
            }

            const data = fs.readFileSync('sample.csv')
            const records = parse(data)
            let csvDataArray = makeData(records)
            console.log(csvDataArray)

            try {
              for (const fileData of csvDataArray) {
                if (fileData.complexity < 10) continue
                if(!isEditFile(fileData.file)) continue
                await github.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/comments', {
                    owner: owner,
                    repo: repo,
                    pull_number: pull_number,
                    body: 'Method ' + fileData.funcName + ' has a  Cyclomatic Complexity of' + fileData.complexity,
                    commit_id: commit_id,
                    path: fileData.file,
                    start_line: fileData.start,
                    start_side: 'RIGHT',
                    line: fileData.end,
                    side: 'RIGHT'
                })
              } 
            } catch (error) {console.log(error)}